{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterType","TodoList","todos","selectedTodoIdId","setselectedTodoId","handlerClickReset","className","map","id","completed","title","classNames","type","onClick","handlerClickSelect","TodoFilter","setFilterBy","filterBy","setQuery","query","value","onChange","event","newSortType","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodoId","useState","user","setUser","selectedTodo","find","useEffect","fetchData","a","userId","userFromServer","selectedTodoIds","filter","todo","hadlerClick","href","name","checkQueryInTitle","toLocaleLowerCase","includes","App","setTodos","isLoading","setLoading","todosFromServer","filteredTodos","filterType","getFilteredTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ded65f2.chunk.js","sourcesContent":["export enum FilterType {\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n  ALL = 'all',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodoIdId: number,\n  setselectedTodoId: (value: number) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoIdId,\n  setselectedTodoId,\n}) => {\n  const handlerClickReset = () => {\n    setselectedTodoId(0);\n  };\n\n  const handlerClickSelect = (id: number) => {\n    setselectedTodoId(id);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({\n          id, completed, title,\n        }) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className={classNames('is-vcentered',\n              {\n                'is-expanded': !completed,\n              })}\n            >\n              <p className={classNames('has-text-success',\n                {\n                  'has-text-danger': !completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={selectedTodoIdId === id\n                  ? handlerClickReset\n                  : () => handlerClickSelect(id)}\n              >\n                {selectedTodoIdId === id\n                  ? (\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  )\n                  : (\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n\n                  )}\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FilterType } from '../../types/Filter';\n\ninterface Props {\n  setFilterBy: (value: FilterType) => void;\n  filterBy: FilterType,\n  setQuery: (value: string) => void;\n  query: string;\n}\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterBy,\n  filterBy,\n  setQuery,\n  query,\n}) => {\n  const handlerChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newSortType = event.target.value as FilterType;\n\n    setFilterBy(newSortType);\n  };\n\n  const handlerChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => (\n    setQuery(event.target.value));\n  const handlerReset = () => setQuery('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={handlerChangeSelect}\n          >\n            <option value={FilterType.ALL}>All</option>\n            <option value={FilterType.ACTIVE}>Active</option>\n            <option value={FilterType.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handlerChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length > 0\n            && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                aria-label=\"delete\"\n                className=\"delete\"\n                onClick={handlerReset}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodoId: number;\n  setselectedTodoId: (value: number) => void,\n  todos: Todo[]\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodoId,\n  setselectedTodoId,\n  todos,\n}) => {\n  const [user, setUser] = useState<User>();\n  const selectedTodo = todos.find(({ id }) => id === selectedTodoId);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (selectedTodo) {\n        const userFromServer = await getUser(selectedTodo.userId);\n\n        setUser(userFromServer);\n      }\n    };\n\n    fetchData();\n  }, [selectedTodoId]);\n\n  const selectedTodoIds = todos.filter(todo => todo.id === selectedTodoId);\n  const hadlerClick = () => {\n    setselectedTodoId(0);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          {selectedTodoIds.map(({ id, title, completed }) => (\n            <>\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${id}`}\n                </div>\n                <button\n                  type=\"button\"\n                  aria-label=\"delete\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={hadlerClick}\n                />\n              </header>\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {completed === true\n                    ? (<strong className=\"has-text-success\">Done</strong>)\n                    : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                  {' by '}\n\n                  <a href=\"mailto:Sincere@april.biz\">\n                    {user.name}\n                  </a>\n                </p>\n              </div>\n\n            </>\n\n          ))}\n\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterType } from './types/Filter';\n\nexport function checkQueryInTitle(title: string, query: string) {\n  return title.toLocaleLowerCase().includes(query.toLocaleLowerCase());\n}\n\nexport function getFilteredTodo(\n  todos: Todo[],\n  filterType: FilterType,\n  query: string,\n) {\n  return todos.filter(({ title, completed }) => {\n    switch (filterType) {\n      case 'active':\n        return !completed && checkQueryInTitle(title, query);\n\n      case 'completed':\n        return completed && checkQueryInTitle(title, query);\n\n      default:\n        return checkQueryInTitle(title, query);\n    }\n  });\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setselectedTodoId] = useState(0);\n  const [filterBy, setFilterBy] = useState(FilterType.ALL);\n  const [query, setQuery] = useState('');\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const todosFromServer = await getTodos();\n\n      setLoading(false);\n\n      setTodos(todosFromServer);\n    };\n\n    fetchData();\n  }, []);\n\n  const filteredTodos = getFilteredTodo(todos, filterBy, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterBy={setFilterBy}\n                filterBy={filterBy}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodoIdId={selectedTodoId}\n                    setselectedTodoId={setselectedTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId\n        && (\n          <TodoModal\n            todos={todos}\n            selectedTodoId={selectedTodoId}\n            setselectedTodoId={setselectedTodoId}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}