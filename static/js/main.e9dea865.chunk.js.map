{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","selectedTodo","selectedUserId","className","map","todo","id","completed","classNames","title","type","onClick","userId","TodoFilter","setFilterBy","filterBy","setQuery","query","value","onChange","event","target","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","TodoModal","useState","user","setUser","setTodos","useEffect","fetchData","a","todosFromServer","userFromServer","selectedTodos","filter","href","name","App","setTodo","setSelectedUserId","setSelectedTodo","isLoading","setLoading","filteredTodos","filterType","toLocaleLowerCase","includes","getFilteredTodo","queryFromInput","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9dea865.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodoId: number,\n  selectedTodo: (value: number) => void,\n  selectedUserId: (value: number) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  selectedTodo,\n  selectedUserId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className={classNames('is-vcentered',\n            {\n              'is-expanded': todo.completed === false,\n            })}\n          >\n            <p className={\n              todo.completed === false\n                ? 'has-text-danger'\n                : 'has-text-success'\n            }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {selectedTodoId === todo.id\n              ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectedTodo(0);\n                    selectedUserId(0);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              )\n              : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectedTodo(todo.id);\n                    selectedUserId(todo.userId);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","interface Props {\n  setFilterBy: (value: string) => void;\n  filterBy: string,\n  setQuery: (value: string) => void;\n  query: string;\n}\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterBy,\n  filterBy,\n  setQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={(event) => setFilterBy(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length > 0\n            && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getTodos, getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  userId: number;\n  selectedTodoId: number;\n  selectedTodo: (value: number) => void,\n  selectedUserId: (value: number) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  selectedTodoId,\n  selectedTodo,\n  selectedUserId,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     const todosFromServer = await getTodos();\n  //     const userFromServer = await getUser(userId);\n\n  //     setUser(userFromServer);\n  //     setTodos(todosFromServer);\n  //   };\n\n  //   fetchData();\n  // }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const todosFromServer = await getTodos();\n      const userFromServer = await getUser(userId);\n\n      setUser(userFromServer);\n      setTodos(todosFromServer);\n    };\n\n    fetchData();\n  }, [selectedTodoId]);\n\n  const selectedTodos = todos.filter(todo => todo.id === selectedTodoId);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          {selectedTodos.map(todo => (\n            <>\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${todo.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={() => {\n                    selectedTodo(0);\n                    selectedUserId(0);\n                  }}\n                />\n              </header>\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {todo.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {todo.completed === true\n                    ? (<strong className=\"has-text-success\">Done</strong>)\n                    : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                  {' by '}\n\n                  <a href=\"mailto:Sincere@april.biz\">\n                    {user.name}\n                  </a>\n                </p>\n              </div>\n\n            </>\n\n          ))}\n\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport function getFilteredTodo(\n  todos: Todo[],\n  filterType: string,\n  query: string,\n) {\n  const filterByType = todos.filter((todo) => {\n    switch (filterType) {\n      case 'active':\n        return todo.completed === false;\n\n      case 'completed':\n        return todo.completed === true;\n\n      case 'all':\n        return todo;\n\n      default:\n        return 0;\n    }\n  });\n\n  return filterByType.filter(({ title }) => (\n    title.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n  ));\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodo] = useState<Todo[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const [filterBy, setFilterBy] = useState('all');\n  const [query, setQuery] = useState('');\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const todosFromServer = await getTodos();\n\n      setLoading(false);\n\n      setTodo(todosFromServer);\n    };\n\n    fetchData();\n  }, []);\n\n  const filteredTodos = getFilteredTodo(todos, filterBy, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterBy={setFilterBy}\n                filterBy={filterBy}\n                setQuery={(queryFromInput) => {\n                  setQuery(queryFromInput);\n                }}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodoId={selectedTodo}\n                    selectedTodo={(id) => {\n                      setSelectedTodo(id);\n                    }}\n                    selectedUserId={(userId) => {\n                      setSelectedUserId(userId);\n                    }}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== 0\n        && (\n          <TodoModal\n            userId={selectedUserId}\n            selectedTodoId={selectedTodo}\n            selectedTodo={(id) => {\n              setSelectedTodo(id);\n            }}\n            selectedUserId={(userId) => {\n              setSelectedUserId(userId);\n            }}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}